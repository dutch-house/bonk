/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { AuctionToken, AuctionTokenInterface } from "../AuctionToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "preMint_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610c5c380380610c5c83398101604081905261002f9161027d565b600361003b8482610378565b5060046100488382610378565b50610053338261005b565b50505061045d565b6001600160a01b03821661008a5760405163ec442f0560e01b8152600060048201526024015b60405180910390fd5b6100966000838361009a565b5050565b6001600160a01b0383166100c55780600260008282546100ba9190610436565b909155506101379050565b6001600160a01b038316600090815260208190526040902054818110156101185760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610081565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661015357600280548290039055610172565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516101b791815260200190565b60405180910390a3505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126101eb57600080fd5b81516001600160401b03811115610204576102046101c4565b604051601f8201601f19908116603f011681016001600160401b0381118282101715610232576102326101c4565b60405281815283820160200185101561024a57600080fd5b60005b828110156102695760208186018101518383018201520161024d565b506000918101602001919091529392505050565b60008060006060848603121561029257600080fd5b83516001600160401b038111156102a857600080fd5b6102b4868287016101da565b602086015190945090506001600160401b038111156102d257600080fd5b6102de868287016101da565b925050604084015190509250925092565b600181811c9082168061030357607f821691505b60208210810361032357634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561037357806000526020600020601f840160051c810160208510156103505750805b601f840160051c820191505b81811015610370576000815560010161035c565b50505b505050565b81516001600160401b03811115610391576103916101c4565b6103a58161039f84546102ef565b84610329565b6020601f8211600181146103d957600083156103c15750848201515b600019600385901b1c1916600184901b178455610370565b600084815260208120601f198516915b8281101561040957878501518255602094850194600190920191016103e9565b50848210156104275786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b8082018082111561045757634e487b7160e01b600052601160045260246000fd5b92915050565b6107f08061046c6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c806342966c681161006657806342966c681461011857806370a082311461012d57806395d89b4114610156578063a9059cbb1461015e578063dd62ed3e1461017157600080fd5b806306fdde03146100a3578063095ea7b3146100c157806318160ddd146100e457806323b872dd146100f6578063313ce56714610109575b600080fd5b6100ab6101aa565b6040516100b89190610620565b60405180910390f35b6100d46100cf36600461068a565b61023c565b60405190151581526020016100b8565b6002545b6040519081526020016100b8565b6100d46101043660046106b4565b610256565b604051601281526020016100b8565b61012b6101263660046106f1565b61027a565b005b6100e861013b36600461070a565b6001600160a01b031660009081526020819052604090205490565b6100ab610287565b6100d461016c36600461068a565b610296565b6100e861017f36600461072c565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101b99061075f565b80601f01602080910402602001604051908101604052809291908181526020018280546101e59061075f565b80156102325780601f1061020757610100808354040283529160200191610232565b820191906000526020600020905b81548152906001019060200180831161021557829003601f168201915b5050505050905090565b60003361024a8185856102a4565b60019150505b92915050565b6000336102648582856102b6565b61026f858585610339565b506001949350505050565b6102843382610398565b50565b6060600480546101b99061075f565b60003361024a818585610339565b6102b18383836001610421565b505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610333578181101561032457604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064015b60405180910390fd5b61033384848484036000610421565b50505050565b6001600160a01b03831661036357604051634b637e8f60e11b81526000600482015260240161031b565b6001600160a01b03821661038d5760405163ec442f0560e01b81526000600482015260240161031b565b6102b18383836104f6565b6001600160a01b0382166103c257604051634b637e8f60e11b81526000600482015260240161031b565b6001600160a01b038216600090815260208190526040902054818110156104155760405163391434e360e21b81526001600160a01b0384166004820152602481018290526044810183905260640161031b565b6102b1836000846104f6565b6001600160a01b03841661044b5760405163e602df0560e01b81526000600482015260240161031b565b6001600160a01b03831661047557604051634a1406b160e11b81526000600482015260240161031b565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561033357826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516104e891815260200190565b60405180910390a350505050565b6001600160a01b0383166105215780600260008282546105169190610799565b909155506105939050565b6001600160a01b038316600090815260208190526040902054818110156105745760405163391434e360e21b81526001600160a01b0385166004820152602481018290526044810183905260640161031b565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166105af576002805482900390556105ce565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161061391815260200190565b60405180910390a3505050565b602081526000825180602084015260005b8181101561064e5760208186018101516040868401015201610631565b506000604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b038116811461068557600080fd5b919050565b6000806040838503121561069d57600080fd5b6106a68361066e565b946020939093013593505050565b6000806000606084860312156106c957600080fd5b6106d28461066e565b92506106e06020850161066e565b929592945050506040919091013590565b60006020828403121561070357600080fd5b5035919050565b60006020828403121561071c57600080fd5b6107258261066e565b9392505050565b6000806040838503121561073f57600080fd5b6107488361066e565b91506107566020840161066e565b90509250929050565b600181811c9082168061077357607f821691505b60208210810361079357634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561025057634e487b7160e01b600052601160045260246000fdfea264697066735822122048fe9d35ed03e551b5acc8cdcaff9f48fa31c1f735cb0580828e6da44a6fb34464736f6c634300081b0033";

type AuctionTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AuctionTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AuctionToken__factory extends ContractFactory {
  constructor(...args: AuctionTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    name_: string,
    symbol_: string,
    preMint_: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      name_,
      symbol_,
      preMint_,
      overrides || {}
    );
  }
  override deploy(
    name_: string,
    symbol_: string,
    preMint_: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(name_, symbol_, preMint_, overrides || {}) as Promise<
      AuctionToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): AuctionToken__factory {
    return super.connect(runner) as AuctionToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AuctionTokenInterface {
    return new Interface(_abi) as AuctionTokenInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): AuctionToken {
    return new Contract(address, _abi, runner) as unknown as AuctionToken;
  }
}
